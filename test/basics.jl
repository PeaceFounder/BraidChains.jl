using Test
using PseudonymBraids
using PseudonymBraids: Member, Guardian, Registrator, Braider, Transaction, Contract, BraidChain, pseudonyms, SynchronicBraid, Hash, MetaData

import PeaceCypher: sign
using PeaceCypher


notary = Notary()

guardiankey = newsigner(notary)
registratorkey = newsigner(notary)

member1key = newsigner(notary)
member2key = newsigner(notary)
member3key = newsigner(notary)


guardian = Guardian(id(guardiankey))
registrator = Registrator(id(registratorkey))
member1 = Member(id(member1key))
member2 = Member(id(member2key))
member3 = Member(id(member3key))


tlog = BraidChain(guardian, notary)

push!(tlog, Transaction(member1, guardiankey))
Test.@test_throws AssertionError push!(tlog, Transaction(member2, registratorkey))
push!(tlog, Transaction(registrator, guardiankey))
push!(tlog, Transaction(member2, registratorkey))
Test.@test_throws AssertionError push!(tlog, Transaction(member2, registratorkey))

pseudonyms(tlog, 3)


### Braiders 

braider = Braider(BigInt(1332))
push!(tlog, Transaction(braider, guardiankey))


m = MetaData(BigInt(2323), braider.id, Hash(tlog))

pseudonym1 = newsigner(notary)
pseudonym2 = newsigner(notary)
pseudonym3 = newsigner(notary)

# generated by users
newpseudonyms = BigInt[id(pseudonym1), id(pseudonym2), id(pseudonym3)]

braid = SynchronicBraid(m, newpseudonyms)


contract = Contract(Dict[Dict(sign(braid, member1key)), Dict(sign(braid, member2key)), Dict(sign(braid, member3key))])


Test.@test_throws AssertionError push!(tlog, Transaction(braid, contract)) ### Should throw an error

push!(tlog, Transaction(member3, registratorkey))
push!(tlog, Transaction(braid, contract)) ### Should throw an error

